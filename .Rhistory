simulated_student_skills <- cbind(tech_skill_data, soft_skill_data)
# JOB POSTING DATA GENERATION --------------------------------------------
# generate gpa for n job postings
library(wakefield)
gpa <- gpa(n, mean = 85, sd = 4) # 85 corresponds to GPA of ~3.15
# generate region for n job postings
region_list <- c("Midwest", "Southwest", "West", "Northeast", "Southeast")
region_prob <- c(0.681, 0.062, 0.117, 0.071, 0.069)
region <- sample(region_list, n, replace = T, prob = region_prob)
# generate industry for n job postings
industry_list <- c(
"Business-Related Fields",
"Chemicals, Petroleum, Plastics & Rubber",
"Computer Systems - Design/Programming",
"Consulting Services",
"Consumer Goods",
"Energy",
"Engineering Services",
"Environmental Services",
"Government",
"Manufacturing & Industrial Systems",
"Other",
"Pharmaceuticals & Medicine",
"Scientific Research & Development"
)
industry_prob <- c(0.061, 0.018, 0.079, 0.128, 0.226, 0.018, 0.189, 0.012, 0.012, 0.183, 0.037, 0.031, 0.610)
industry <- sample(industry_list, n, replace = T, prob = industry_prob)
# generate job type for n job postings
type_list <- c("Internship", "Co-op", "Full-time")
job_type <- sample(type_list, n, replace = T, prob = c(0.4, 0.2, 0.4))
# generate education level for n job postings
school_year <- c("Freshman", "Sophomore", "Junior", "Senior")
ed_level <- sample(school_year, n, replace = T)
# Fill matching alg requirements in Job_posting table
simulated_job_posting <- data.frame(
gpa,
region,
industry,
job_type,
ed_level
)
# generate 10 technical skills for n job postings
tech_skill_list <- dbReadTable(db_connection, "TechSkills")$skill_name
tech_skill_data <- matrix(nrow = n, ncol = 10)
for (i in 1:n) {
tech_skill_data[i,] <- sample(tech_skill_list, 10, replace = F)
}
tech_skill_data <- data.frame(tech_skill_data)
# generate ranking for each of the 10 technical skills for n job postings
rating_list <- c("1: Beginner", "2: Basic", "3: Intermediate", "4: Advanced", "5: Expert")
for (i in 1:10) {
tech_skill_data <- cbind(tech_skill_data, sample(rating_list, n, replace = T))
}
names(tech_skill_data) <- c(
sapply(1:10, function(x) return(paste0("tech_skill", x))),
sapply(1:10, function(x) return(paste0("tech_rate", x)))
)
# generate 10 soft skills for n students
soft_skill_list <- dbReadTable(db_connection, "SoftSkills")$skill_name
soft_skill_data <- matrix(nrow = n, ncol = 10)
for (i in 1:n) {
soft_skill_data[i,] <- sample(soft_skill_list, 10, replace = F)
}
soft_skill_data <- data.frame(soft_skill_data)
names(soft_skill_data) <- sapply(1:10, function(x) return(paste0("soft_skill", x)))
# Fill matching alg skill requirements in Job_skills table
simultaed_job_skills <- cbind(tech_skill_data, soft_skill_data)
library(RMySQL)
db_connection <- dbConnect(MySQL(), user = "g1116887", password = "12Blueapples", dbname = "g1116887", host = "mydb.itap.purdue.edu")
on.exit(dbDisconnect(db_connection))
# STUDENT DATA GENERATION ------------------------------------------------
n = 50
# generate random names for n students
library(randomNames)
fir_name <- randomNames(n, which.names = "first")
las_name <- randomNames(n, which.names = "last")
# generate gpa for n students
library(wakefield)
gpa <- gpa(n, mean = 85, sd = 4) # 85 corresponds to GPA of ~3.15
# generate region preferences for n students
region_list <- c("Midwest", "Southwest", "West", "Northeast", "Southeast")
region_prob <- c(0.681, 0.062, 0.117, 0.071, 0.069)
region <- sample(region_list, n, replace = T, prob = region_prob)
# generate industry preferences for n students
industry_list <- c(
"Business-Related Fields",
"Chemicals, Petroleum, Plastics & Rubber",
"Computer Systems - Design/Programming",
"Consulting Services",
"Consumer Goods",
"Energy",
"Engineering Services",
"Environmental Services",
"Government",
"Manufacturing & Industrial Systems",
"Other",
"Pharmaceuticals & Medicine",
"Scientific Research & Development"
)
industry_prob <- c(0.061, 0.018, 0.079, 0.128, 0.226, 0.018, 0.189, 0.012, 0.012, 0.183, 0.037, 0.031, 0.610)
industry <- sample(industry_list, n, replace = T, prob = industry_prob)
# generate job type preferences for n students
type_list <- c("Internship", "Co-op", "Full-time")
job_type <- sample(type_list, n, replace = T, prob = c(0.4, 0.2, 0.4))
# generate education level for n students
school_year <- c("Freshman", "Sophomore", "Junior", "Senior")
ed_level <- sample(school_year, n, replace = T)
# Fill matching alg requirements in Student table
simulated_student_info <- data.frame(
fir_name,
las_name,
gpa,
region,
industry,
job_type,
ed_level
)
# generate 10 technical skills for n students
tech_skill_list <- dbReadTable(db_connection, "TechSkills")$skill_name
tech_skill_data <- matrix(nrow = n, ncol = 10)
for (i in 1:n) {
tech_skill_data[i,] <- sample(tech_skill_list, 10, replace = F)
}
tech_skill_data <- data.frame(tech_skill_data)
# generate ranking for each of the 10 technical skills for n students
rating_list <- c("1: Beginner", "2: Basic", "3: Intermediate", "4: Advanced", "5: Expert")
for (i in 1:10) {
tech_skill_data <- cbind(tech_skill_data, sample(rating_list, n, replace = T))
}
names(tech_skill_data) <- c(
sapply(1:10, function(x) return(paste0("tech_skill", x))),
sapply(1:10, function(x) return(paste0("tech_rate", x)))
)
# generate 10 soft skills for n students
soft_skill_list <- dbReadTable(db_connection, "SoftSkills")$skill_name
soft_skill_data <- matrix(nrow = n, ncol = 10)
for (i in 1:n) {
soft_skill_data[i,] <- sample(soft_skill_list, 10, replace = F)
}
soft_skill_data <- data.frame(soft_skill_data)
names(soft_skill_data) <- sapply(1:10, function(x) return(paste0("soft_skill", x)))
# Fill matching alg skill requirements in Student_skills table
simulated_student_skills <- cbind(tech_skill_data, soft_skill_data)
# JOB POSTING DATA GENERATION --------------------------------------------
# generate gpa for n job postings
library(wakefield)
gpa <- gpa(n, mean = 85, sd = 4) # 85 corresponds to GPA of ~3.15
# generate region for n job postings
region_list <- c("Midwest", "Southwest", "West", "Northeast", "Southeast")
region_prob <- c(0.681, 0.062, 0.117, 0.071, 0.069)
region <- sample(region_list, n, replace = T, prob = region_prob)
# generate industry for n job postings
industry_list <- c(
"Business-Related Fields",
"Chemicals, Petroleum, Plastics & Rubber",
"Computer Systems - Design/Programming",
"Consulting Services",
"Consumer Goods",
"Energy",
"Engineering Services",
"Environmental Services",
"Government",
"Manufacturing & Industrial Systems",
"Other",
"Pharmaceuticals & Medicine",
"Scientific Research & Development"
